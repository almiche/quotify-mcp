// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: mcp.proto

package mcp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Initialize messages
type InitializeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProtocolVersion string                 `protobuf:"bytes,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	Capabilities    *ClientCapabilities    `protobuf:"bytes,2,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	ClientInfo      *ClientInfo            `protobuf:"bytes,3,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	mi := &file_mcp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{0}
}

func (x *InitializeRequest) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *InitializeRequest) GetCapabilities() *ClientCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *InitializeRequest) GetClientInfo() *ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

type InitializeResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProtocolVersion string                 `protobuf:"bytes,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	Capabilities    *ServerCapabilities    `protobuf:"bytes,2,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	ServerInfo      *ServerInfo            `protobuf:"bytes,3,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InitializeResponse) Reset() {
	*x = InitializeResponse{}
	mi := &file_mcp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeResponse) ProtoMessage() {}

func (x *InitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeResponse.ProtoReflect.Descriptor instead.
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{1}
}

func (x *InitializeResponse) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *InitializeResponse) GetCapabilities() *ServerCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *InitializeResponse) GetServerInfo() *ServerInfo {
	if x != nil {
		return x.ServerInfo
	}
	return nil
}

type ClientCapabilities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Roots         bool                   `protobuf:"varint,1,opt,name=roots,proto3" json:"roots,omitempty"`
	Sampling      bool                   `protobuf:"varint,2,opt,name=sampling,proto3" json:"sampling,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientCapabilities) Reset() {
	*x = ClientCapabilities{}
	mi := &file_mcp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCapabilities) ProtoMessage() {}

func (x *ClientCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCapabilities.ProtoReflect.Descriptor instead.
func (*ClientCapabilities) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{2}
}

func (x *ClientCapabilities) GetRoots() bool {
	if x != nil {
		return x.Roots
	}
	return false
}

func (x *ClientCapabilities) GetSampling() bool {
	if x != nil {
		return x.Sampling
	}
	return false
}

type ServerCapabilities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logging       bool                   `protobuf:"varint,1,opt,name=logging,proto3" json:"logging,omitempty"`
	Prompts       bool                   `protobuf:"varint,2,opt,name=prompts,proto3" json:"prompts,omitempty"`
	Resources     bool                   `protobuf:"varint,3,opt,name=resources,proto3" json:"resources,omitempty"`
	Tools         bool                   `protobuf:"varint,4,opt,name=tools,proto3" json:"tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerCapabilities) Reset() {
	*x = ServerCapabilities{}
	mi := &file_mcp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCapabilities) ProtoMessage() {}

func (x *ServerCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCapabilities.ProtoReflect.Descriptor instead.
func (*ServerCapabilities) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{3}
}

func (x *ServerCapabilities) GetLogging() bool {
	if x != nil {
		return x.Logging
	}
	return false
}

func (x *ServerCapabilities) GetPrompts() bool {
	if x != nil {
		return x.Prompts
	}
	return false
}

func (x *ServerCapabilities) GetResources() bool {
	if x != nil {
		return x.Resources
	}
	return false
}

func (x *ServerCapabilities) GetTools() bool {
	if x != nil {
		return x.Tools
	}
	return false
}

type ClientInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	mi := &file_mcp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{4}
}

func (x *ClientInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ServerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	mi := &file_mcp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{5}
}

func (x *ServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Tool messages
type ListToolsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cursor        string                 `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListToolsRequest) Reset() {
	*x = ListToolsRequest{}
	mi := &file_mcp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListToolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToolsRequest) ProtoMessage() {}

func (x *ListToolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToolsRequest.ProtoReflect.Descriptor instead.
func (*ListToolsRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{6}
}

func (x *ListToolsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type ListToolsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tools         []*Tool                `protobuf:"bytes,1,rep,name=tools,proto3" json:"tools,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListToolsResponse) Reset() {
	*x = ListToolsResponse{}
	mi := &file_mcp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListToolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListToolsResponse) ProtoMessage() {}

func (x *ListToolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListToolsResponse.ProtoReflect.Descriptor instead.
func (*ListToolsResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{7}
}

func (x *ListToolsResponse) GetTools() []*Tool {
	if x != nil {
		return x.Tools
	}
	return nil
}

func (x *ListToolsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type Tool struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	InputSchema   map[string]string      `protobuf:"bytes,3,rep,name=input_schema,json=inputSchema,proto3" json:"input_schema,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tool) Reset() {
	*x = Tool{}
	mi := &file_mcp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tool) ProtoMessage() {}

func (x *Tool) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tool.ProtoReflect.Descriptor instead.
func (*Tool) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{8}
}

func (x *Tool) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tool) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tool) GetInputSchema() map[string]string {
	if x != nil {
		return x.InputSchema
	}
	return nil
}

type CallToolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Arguments     map[string]string      `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallToolRequest) Reset() {
	*x = CallToolRequest{}
	mi := &file_mcp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallToolRequest) ProtoMessage() {}

func (x *CallToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallToolRequest.ProtoReflect.Descriptor instead.
func (*CallToolRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{9}
}

func (x *CallToolRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CallToolRequest) GetArguments() map[string]string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type CallToolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []*ToolResult          `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	IsError       bool                   `protobuf:"varint,2,opt,name=is_error,json=isError,proto3" json:"is_error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallToolResponse) Reset() {
	*x = CallToolResponse{}
	mi := &file_mcp_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallToolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallToolResponse) ProtoMessage() {}

func (x *CallToolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallToolResponse.ProtoReflect.Descriptor instead.
func (*CallToolResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{10}
}

func (x *CallToolResponse) GetContent() []*ToolResult {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CallToolResponse) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

type ToolResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolResult) Reset() {
	*x = ToolResult{}
	mi := &file_mcp_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolResult) ProtoMessage() {}

func (x *ToolResult) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolResult.ProtoReflect.Descriptor instead.
func (*ToolResult) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{11}
}

func (x *ToolResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ToolResult) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Prompt messages
type ListPromptsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cursor        string                 `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPromptsRequest) Reset() {
	*x = ListPromptsRequest{}
	mi := &file_mcp_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPromptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPromptsRequest) ProtoMessage() {}

func (x *ListPromptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPromptsRequest.ProtoReflect.Descriptor instead.
func (*ListPromptsRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{12}
}

func (x *ListPromptsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type ListPromptsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prompts       []*Prompt              `protobuf:"bytes,1,rep,name=prompts,proto3" json:"prompts,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPromptsResponse) Reset() {
	*x = ListPromptsResponse{}
	mi := &file_mcp_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPromptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPromptsResponse) ProtoMessage() {}

func (x *ListPromptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPromptsResponse.ProtoReflect.Descriptor instead.
func (*ListPromptsResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{13}
}

func (x *ListPromptsResponse) GetPrompts() []*Prompt {
	if x != nil {
		return x.Prompts
	}
	return nil
}

func (x *ListPromptsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type Prompt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Arguments     []*PromptArgument      `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Prompt) Reset() {
	*x = Prompt{}
	mi := &file_mcp_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Prompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prompt) ProtoMessage() {}

func (x *Prompt) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prompt.ProtoReflect.Descriptor instead.
func (*Prompt) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{14}
}

func (x *Prompt) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Prompt) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Prompt) GetArguments() []*PromptArgument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type PromptArgument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Required      bool                   `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromptArgument) Reset() {
	*x = PromptArgument{}
	mi := &file_mcp_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptArgument) ProtoMessage() {}

func (x *PromptArgument) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptArgument.ProtoReflect.Descriptor instead.
func (*PromptArgument) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{15}
}

func (x *PromptArgument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PromptArgument) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PromptArgument) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

type GetPromptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Arguments     map[string]string      `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPromptRequest) Reset() {
	*x = GetPromptRequest{}
	mi := &file_mcp_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPromptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromptRequest) ProtoMessage() {}

func (x *GetPromptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromptRequest.ProtoReflect.Descriptor instead.
func (*GetPromptRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{16}
}

func (x *GetPromptRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPromptRequest) GetArguments() map[string]string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type GetPromptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Messages      []*PromptMessage       `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPromptResponse) Reset() {
	*x = GetPromptResponse{}
	mi := &file_mcp_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPromptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromptResponse) ProtoMessage() {}

func (x *GetPromptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromptResponse.ProtoReflect.Descriptor instead.
func (*GetPromptResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{17}
}

func (x *GetPromptResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetPromptResponse) GetMessages() []*PromptMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type PromptMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromptMessage) Reset() {
	*x = PromptMessage{}
	mi := &file_mcp_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptMessage) ProtoMessage() {}

func (x *PromptMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptMessage.ProtoReflect.Descriptor instead.
func (*PromptMessage) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{18}
}

func (x *PromptMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *PromptMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Resource messages
type ListResourcesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cursor        string                 `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResourcesRequest) Reset() {
	*x = ListResourcesRequest{}
	mi := &file_mcp_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResourcesRequest) ProtoMessage() {}

func (x *ListResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResourcesRequest.ProtoReflect.Descriptor instead.
func (*ListResourcesRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{19}
}

func (x *ListResourcesRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type ListResourcesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resources     []*Resource            `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResourcesResponse) Reset() {
	*x = ListResourcesResponse{}
	mi := &file_mcp_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResourcesResponse) ProtoMessage() {}

func (x *ListResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResourcesResponse.ProtoReflect.Descriptor instead.
func (*ListResourcesResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{20}
}

func (x *ListResourcesResponse) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ListResourcesResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type Resource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	MimeType      string                 `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_mcp_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{21}
}

func (x *Resource) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Resource) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

type ReadResourceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResourceRequest) Reset() {
	*x = ReadResourceRequest{}
	mi := &file_mcp_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResourceRequest) ProtoMessage() {}

func (x *ReadResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResourceRequest.ProtoReflect.Descriptor instead.
func (*ReadResourceRequest) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{22}
}

func (x *ReadResourceRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type ReadResourceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contents      []*ResourceContent     `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResourceResponse) Reset() {
	*x = ReadResourceResponse{}
	mi := &file_mcp_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResourceResponse) ProtoMessage() {}

func (x *ReadResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResourceResponse.ProtoReflect.Descriptor instead.
func (*ReadResourceResponse) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{23}
}

func (x *ReadResourceResponse) GetContents() []*ResourceContent {
	if x != nil {
		return x.Contents
	}
	return nil
}

type ResourceContent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	MimeType      string                 `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Text          string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceContent) Reset() {
	*x = ResourceContent{}
	mi := &file_mcp_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceContent) ProtoMessage() {}

func (x *ResourceContent) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceContent.ProtoReflect.Descriptor instead.
func (*ResourceContent) Descriptor() ([]byte, []int) {
	return file_mcp_proto_rawDescGZIP(), []int{24}
}

func (x *ResourceContent) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ResourceContent) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ResourceContent) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_mcp_proto protoreflect.FileDescriptor

const file_mcp_proto_rawDesc = "" +
	"\n" +
	"\tmcp.proto\x12\x03mcp\"\xad\x01\n" +
	"\x11InitializeRequest\x12)\n" +
	"\x10protocol_version\x18\x01 \x01(\tR\x0fprotocolVersion\x12;\n" +
	"\fcapabilities\x18\x02 \x01(\v2\x17.mcp.ClientCapabilitiesR\fcapabilities\x120\n" +
	"\vclient_info\x18\x03 \x01(\v2\x0f.mcp.ClientInfoR\n" +
	"clientInfo\"\xae\x01\n" +
	"\x12InitializeResponse\x12)\n" +
	"\x10protocol_version\x18\x01 \x01(\tR\x0fprotocolVersion\x12;\n" +
	"\fcapabilities\x18\x02 \x01(\v2\x17.mcp.ServerCapabilitiesR\fcapabilities\x120\n" +
	"\vserver_info\x18\x03 \x01(\v2\x0f.mcp.ServerInfoR\n" +
	"serverInfo\"F\n" +
	"\x12ClientCapabilities\x12\x14\n" +
	"\x05roots\x18\x01 \x01(\bR\x05roots\x12\x1a\n" +
	"\bsampling\x18\x02 \x01(\bR\bsampling\"|\n" +
	"\x12ServerCapabilities\x12\x18\n" +
	"\alogging\x18\x01 \x01(\bR\alogging\x12\x18\n" +
	"\aprompts\x18\x02 \x01(\bR\aprompts\x12\x1c\n" +
	"\tresources\x18\x03 \x01(\bR\tresources\x12\x14\n" +
	"\x05tools\x18\x04 \x01(\bR\x05tools\":\n" +
	"\n" +
	"ClientInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\":\n" +
	"\n" +
	"ServerInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"*\n" +
	"\x10ListToolsRequest\x12\x16\n" +
	"\x06cursor\x18\x01 \x01(\tR\x06cursor\"U\n" +
	"\x11ListToolsResponse\x12\x1f\n" +
	"\x05tools\x18\x01 \x03(\v2\t.mcp.ToolR\x05tools\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"\xbb\x01\n" +
	"\x04Tool\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12=\n" +
	"\finput_schema\x18\x03 \x03(\v2\x1a.mcp.Tool.InputSchemaEntryR\vinputSchema\x1a>\n" +
	"\x10InputSchemaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x01\n" +
	"\x0fCallToolRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12A\n" +
	"\targuments\x18\x02 \x03(\v2#.mcp.CallToolRequest.ArgumentsEntryR\targuments\x1a<\n" +
	"\x0eArgumentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"X\n" +
	"\x10CallToolResponse\x12)\n" +
	"\acontent\x18\x01 \x03(\v2\x0f.mcp.ToolResultR\acontent\x12\x19\n" +
	"\bis_error\x18\x02 \x01(\bR\aisError\"4\n" +
	"\n" +
	"ToolResult\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\",\n" +
	"\x12ListPromptsRequest\x12\x16\n" +
	"\x06cursor\x18\x01 \x01(\tR\x06cursor\"]\n" +
	"\x13ListPromptsResponse\x12%\n" +
	"\aprompts\x18\x01 \x03(\v2\v.mcp.PromptR\aprompts\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"q\n" +
	"\x06Prompt\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x121\n" +
	"\targuments\x18\x03 \x03(\v2\x13.mcp.PromptArgumentR\targuments\"b\n" +
	"\x0ePromptArgument\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1a\n" +
	"\brequired\x18\x03 \x01(\bR\brequired\"\xa8\x01\n" +
	"\x10GetPromptRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12B\n" +
	"\targuments\x18\x02 \x03(\v2$.mcp.GetPromptRequest.ArgumentsEntryR\targuments\x1a<\n" +
	"\x0eArgumentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"e\n" +
	"\x11GetPromptResponse\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12.\n" +
	"\bmessages\x18\x02 \x03(\v2\x12.mcp.PromptMessageR\bmessages\"=\n" +
	"\rPromptMessage\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\".\n" +
	"\x14ListResourcesRequest\x12\x16\n" +
	"\x06cursor\x18\x01 \x01(\tR\x06cursor\"e\n" +
	"\x15ListResourcesResponse\x12+\n" +
	"\tresources\x18\x01 \x03(\v2\r.mcp.ResourceR\tresources\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"o\n" +
	"\bResource\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1b\n" +
	"\tmime_type\x18\x04 \x01(\tR\bmimeType\"'\n" +
	"\x13ReadResourceRequest\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\"H\n" +
	"\x14ReadResourceResponse\x120\n" +
	"\bcontents\x18\x01 \x03(\v2\x14.mcp.ResourceContentR\bcontents\"T\n" +
	"\x0fResourceContent\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\x12\x1b\n" +
	"\tmime_type\x18\x02 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text2\xcb\x03\n" +
	"\n" +
	"MCPService\x12=\n" +
	"\n" +
	"Initialize\x12\x16.mcp.InitializeRequest\x1a\x17.mcp.InitializeResponse\x12:\n" +
	"\tListTools\x12\x15.mcp.ListToolsRequest\x1a\x16.mcp.ListToolsResponse\x127\n" +
	"\bCallTool\x12\x14.mcp.CallToolRequest\x1a\x15.mcp.CallToolResponse\x12@\n" +
	"\vListPrompts\x12\x17.mcp.ListPromptsRequest\x1a\x18.mcp.ListPromptsResponse\x12:\n" +
	"\tGetPrompt\x12\x15.mcp.GetPromptRequest\x1a\x16.mcp.GetPromptResponse\x12F\n" +
	"\rListResources\x12\x19.mcp.ListResourcesRequest\x1a\x1a.mcp.ListResourcesResponse\x12C\n" +
	"\fReadResource\x12\x18.mcp.ReadResourceRequest\x1a\x19.mcp.ReadResourceResponseB(Z&github.com/example/mcp-testing/pkg/mcpb\x06proto3"

var (
	file_mcp_proto_rawDescOnce sync.Once
	file_mcp_proto_rawDescData []byte
)

func file_mcp_proto_rawDescGZIP() []byte {
	file_mcp_proto_rawDescOnce.Do(func() {
		file_mcp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcp_proto_rawDesc), len(file_mcp_proto_rawDesc)))
	})
	return file_mcp_proto_rawDescData
}

var file_mcp_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_mcp_proto_goTypes = []any{
	(*InitializeRequest)(nil),     // 0: mcp.InitializeRequest
	(*InitializeResponse)(nil),    // 1: mcp.InitializeResponse
	(*ClientCapabilities)(nil),    // 2: mcp.ClientCapabilities
	(*ServerCapabilities)(nil),    // 3: mcp.ServerCapabilities
	(*ClientInfo)(nil),            // 4: mcp.ClientInfo
	(*ServerInfo)(nil),            // 5: mcp.ServerInfo
	(*ListToolsRequest)(nil),      // 6: mcp.ListToolsRequest
	(*ListToolsResponse)(nil),     // 7: mcp.ListToolsResponse
	(*Tool)(nil),                  // 8: mcp.Tool
	(*CallToolRequest)(nil),       // 9: mcp.CallToolRequest
	(*CallToolResponse)(nil),      // 10: mcp.CallToolResponse
	(*ToolResult)(nil),            // 11: mcp.ToolResult
	(*ListPromptsRequest)(nil),    // 12: mcp.ListPromptsRequest
	(*ListPromptsResponse)(nil),   // 13: mcp.ListPromptsResponse
	(*Prompt)(nil),                // 14: mcp.Prompt
	(*PromptArgument)(nil),        // 15: mcp.PromptArgument
	(*GetPromptRequest)(nil),      // 16: mcp.GetPromptRequest
	(*GetPromptResponse)(nil),     // 17: mcp.GetPromptResponse
	(*PromptMessage)(nil),         // 18: mcp.PromptMessage
	(*ListResourcesRequest)(nil),  // 19: mcp.ListResourcesRequest
	(*ListResourcesResponse)(nil), // 20: mcp.ListResourcesResponse
	(*Resource)(nil),              // 21: mcp.Resource
	(*ReadResourceRequest)(nil),   // 22: mcp.ReadResourceRequest
	(*ReadResourceResponse)(nil),  // 23: mcp.ReadResourceResponse
	(*ResourceContent)(nil),       // 24: mcp.ResourceContent
	nil,                           // 25: mcp.Tool.InputSchemaEntry
	nil,                           // 26: mcp.CallToolRequest.ArgumentsEntry
	nil,                           // 27: mcp.GetPromptRequest.ArgumentsEntry
}
var file_mcp_proto_depIdxs = []int32{
	2,  // 0: mcp.InitializeRequest.capabilities:type_name -> mcp.ClientCapabilities
	4,  // 1: mcp.InitializeRequest.client_info:type_name -> mcp.ClientInfo
	3,  // 2: mcp.InitializeResponse.capabilities:type_name -> mcp.ServerCapabilities
	5,  // 3: mcp.InitializeResponse.server_info:type_name -> mcp.ServerInfo
	8,  // 4: mcp.ListToolsResponse.tools:type_name -> mcp.Tool
	25, // 5: mcp.Tool.input_schema:type_name -> mcp.Tool.InputSchemaEntry
	26, // 6: mcp.CallToolRequest.arguments:type_name -> mcp.CallToolRequest.ArgumentsEntry
	11, // 7: mcp.CallToolResponse.content:type_name -> mcp.ToolResult
	14, // 8: mcp.ListPromptsResponse.prompts:type_name -> mcp.Prompt
	15, // 9: mcp.Prompt.arguments:type_name -> mcp.PromptArgument
	27, // 10: mcp.GetPromptRequest.arguments:type_name -> mcp.GetPromptRequest.ArgumentsEntry
	18, // 11: mcp.GetPromptResponse.messages:type_name -> mcp.PromptMessage
	21, // 12: mcp.ListResourcesResponse.resources:type_name -> mcp.Resource
	24, // 13: mcp.ReadResourceResponse.contents:type_name -> mcp.ResourceContent
	0,  // 14: mcp.MCPService.Initialize:input_type -> mcp.InitializeRequest
	6,  // 15: mcp.MCPService.ListTools:input_type -> mcp.ListToolsRequest
	9,  // 16: mcp.MCPService.CallTool:input_type -> mcp.CallToolRequest
	12, // 17: mcp.MCPService.ListPrompts:input_type -> mcp.ListPromptsRequest
	16, // 18: mcp.MCPService.GetPrompt:input_type -> mcp.GetPromptRequest
	19, // 19: mcp.MCPService.ListResources:input_type -> mcp.ListResourcesRequest
	22, // 20: mcp.MCPService.ReadResource:input_type -> mcp.ReadResourceRequest
	1,  // 21: mcp.MCPService.Initialize:output_type -> mcp.InitializeResponse
	7,  // 22: mcp.MCPService.ListTools:output_type -> mcp.ListToolsResponse
	10, // 23: mcp.MCPService.CallTool:output_type -> mcp.CallToolResponse
	13, // 24: mcp.MCPService.ListPrompts:output_type -> mcp.ListPromptsResponse
	17, // 25: mcp.MCPService.GetPrompt:output_type -> mcp.GetPromptResponse
	20, // 26: mcp.MCPService.ListResources:output_type -> mcp.ListResourcesResponse
	23, // 27: mcp.MCPService.ReadResource:output_type -> mcp.ReadResourceResponse
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_mcp_proto_init() }
func file_mcp_proto_init() {
	if File_mcp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcp_proto_rawDesc), len(file_mcp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mcp_proto_goTypes,
		DependencyIndexes: file_mcp_proto_depIdxs,
		MessageInfos:      file_mcp_proto_msgTypes,
	}.Build()
	File_mcp_proto = out.File
	file_mcp_proto_goTypes = nil
	file_mcp_proto_depIdxs = nil
}
